/*
 * Application Authorization API
 * API for authenticating client credentials to be able to access the Kespry Platform APIs
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ApplicationAuthorizationApi) {
      root.ApplicationAuthorizationApi = {};
    }
    root.ApplicationAuthorizationApi.Auth = factory(root.ApplicationAuthorizationApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Auth model module.
   * @module model/Auth
   * @version 1.0
   */

  /**
   * Constructs a new <code>Auth</code>.
   * @alias module:model/Auth
   * @class
   * @param accessToken {String} Access Token
   * @param tokenType {String} Token type (will always be BearerToken)
   * @param issuedAt {Number} UTC timestamp in milliseconds
   * @param expiresIn {Number} Number of seconds since issuedAt when this token expires
   * @param clientID {String} Client ID used to generate this token
   * @param org {String} Organization responsible for this token
   */
  var exports = function(accessToken, tokenType, issuedAt, expiresIn, clientID, org) {
    this.accessToken = accessToken;
    this.tokenType = tokenType;
    this.issuedAt = issuedAt;
    this.expiresIn = expiresIn;
    this.clientID = clientID;
    this.org = org;
  };

  /**
   * Constructs a <code>Auth</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Auth} obj Optional instance to populate.
   * @return {module:model/Auth} The populated <code>Auth</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('access_token'))
        obj.accessToken = ApiClient.convertToType(data['access_token'], 'String');
      if (data.hasOwnProperty('tokenType'))
        obj.tokenType = ApiClient.convertToType(data['tokenType'], 'String');
      if (data.hasOwnProperty('issuedAt'))
        obj.issuedAt = ApiClient.convertToType(data['issuedAt'], 'Number');
      if (data.hasOwnProperty('expiresIn'))
        obj.expiresIn = ApiClient.convertToType(data['expiresIn'], 'Number');
      if (data.hasOwnProperty('clientID'))
        obj.clientID = ApiClient.convertToType(data['clientID'], 'String');
      if (data.hasOwnProperty('org'))
        obj.org = ApiClient.convertToType(data['org'], 'String');
    }
    return obj;
  }

  /**
   * Access Token
   * @member {String} accessToken
   */
  exports.prototype.accessToken = undefined;

  /**
   * Token type (will always be BearerToken)
   * @member {String} tokenType
   */
  exports.prototype.tokenType = undefined;

  /**
   * UTC timestamp in milliseconds
   * @member {Number} issuedAt
   */
  exports.prototype.issuedAt = undefined;

  /**
   * Number of seconds since issuedAt when this token expires
   * @member {Number} expiresIn
   */
  exports.prototype.expiresIn = undefined;

  /**
   * Client ID used to generate this token
   * @member {String} clientID
   */
  exports.prototype.clientID = undefined;

  /**
   * Organization responsible for this token
   * @member {String} org
   */
  exports.prototype.org = undefined;


  return exports;

}));
